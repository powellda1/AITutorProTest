CurriculumTree: Standard clicked: 
Object { id: 720, code: "6.NS.1.a", description: "Estimate and determine the percent represented by a given model, including percents greater than 100% and less than 1%.", contentAreaId: 66, order: 0 }
​
code: "6.NS.1.a"
​
contentAreaId: 66
​
description: "Estimate and determine the percent represented by a given model, including percents greater than 100% and less than 1%."
​
id: 720
​
order: 0
​
<prototype>: Object { … }
Console.js:61:14
CurriculumTree: Lessons for standard: 
Array [ {…}, {…} ]
Console.js:61:14
Home: handleStandardSelect called with: 6.NS.1.a Console.js:61:14
Home: Lessons received: 
Array [ {…}, {…} ]
Console.js:61:14
Home: Current selectedLesson: null Console.js:61:14
Home: Setting selectedLesson to: 
Object { id: 3531, title: "What percentage is illustrated?", code: "6-U.1", explanation: "Students look at shaded models, such as grids or strip diagrams, to find the percentage of the area that is shaded.", examples: (3) […], standardId: 720, order: 0 }
​
code: "6-U.1"
​
examples: Array(3) [ "A grid has 80 shaded squares out of 100, so the percent is 80%.", "A strip with 125 shaded parts out of 100 shows 125%.", "A diagram has 0.7 shaded out of 100, so the percent is 0.7%." ]
​​
0: "A grid has 80 shaded squares out of 100, so the percent is 80%."
​​
1: "A strip with 125 shaded parts out of 100 shows 125%."
​​
2: "A diagram has 0.7 shaded out of 100, so the percent is 0.7%."
​​
length: 3
​​
<prototype>: Array []
​
explanation: "Students look at shaded models, such as grids or strip diagrams, to find the percentage of the area that is shaded."
​
id: 3531
​
order: 0
​
standardId: 720
​
title: "What percentage is illustrated?"
​
<prototype>: Object { … }
Console.js:61:14
🔍 analyzeLessonType called with: 
Object { title: "What percentage is illustrated?", explanation: "Students look at shaded models, such as grids or strip diagrams, to find the percentage of the area that is shaded.", standardCode: "6.NS.1.a" }
​
explanation: "Students look at shaded models, such as grids or strip diagrams, to find the percentage of the area that is shaded."
​
standardCode: "6.NS.1.a"
​
title: "What percentage is illustrated?"
​
<prototype>: Object { … }
Console.js:61:14
✅ analyzeLessonType: Detected GRID MODEL (title-based) Console.js:61:14
🔍 analyzeLessonType called with: 
Object { title: "What percentage is illustrated?", explanation: "Students look at shaded models, such as grids or strip diagrams, to find the percentage of the area that is shaded.", standardCode: "6-U.1" }
​
explanation: "Students look at shaded models, such as grids or strip diagrams, to find the percentage of the area that is shaded."
​
standardCode: "6-U.1"
​
title: "What percentage is illustrated?"
​
<prototype>: Object { … }
Console.js:61:14
✅ analyzeLessonType: Detected GRID MODEL (title-based) Console.js:61:14
🔍 InteractivePracticeRenderer lessonAnalysis: 
Object { type: "grid-percentage", requiresInteraction: true, componentType: "grid" }
​
componentType: "grid"
​
requiresInteraction: true
​
type: "grid-percentage"
​
<prototype>: Object { … }
Console.js:61:14
🔍 InteractivePracticeRenderer actualExample: A grid has 80 shaded squares out of 100, so the percent is 80%. Console.js:61:14
🔍 InteractivePracticeRenderer processedContent: 
Object { interactiveText: "What percentage of this grid is shaded?", correctAnswer: 80, componentType: "grid", gridSize: 100, columns: 10, preShadedCells: (80) […], gridMode: "identify-percentage", additionalData: {…} }
​
additionalData: Object { shadedCount: 80, totalCount: 100, actualPercentage: 80, … }
​​
actualPercentage: 80
​​
originalExample: "A grid has 80 shaded squares out of 100, so the percent is 80%."
​​
shadedCount: 80
​​
totalCount: 100
​​
<prototype>: Object { … }
​
columns: 10
​
componentType: "grid"
​
correctAnswer: 80
​
gridMode: "identify-percentage"
​
gridSize: 100
​
interactiveText: "What percentage of this grid is shaded?"
​
preShadedCells: Array(80) [ 0, 1, 2, … ]
​
<prototype>: Object { … }
​​
__defineGetter__: function __defineGetter__()
​​
__defineSetter__: function __defineSetter__()
​​
__lookupGetter__: function __lookupGetter__()
​​
__lookupSetter__: function __lookupSetter__()
​​
__proto__: 
​​
constructor: function Object()
​​
hasOwnProperty: function hasOwnProperty()
​​
isPrototypeOf: function isPrototypeOf()
​​
propertyIsEnumerable: function propertyIsEnumerable()
​​
toLocaleString: function toLocaleString()
​​
toString: function toString()
​​
valueOf: function valueOf()
​​
<get __proto__()>: function __proto__()
​​
<set __proto__()>: function __proto__()
Console.js:61:14

1

​